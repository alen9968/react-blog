{"ast":null,"code":"import _Array$isArray from \"@babel/runtime-corejs2/core-js/array/is-array\";\nimport I, { List, Set, isImmutable } from 'immutable';\nimport _ from 'lodash';\nimport request from '../../utils/request';\nexport var VIEW_SET = 'VIEW_SET';\nexport var VIEW_SET_IN = 'VIEW_SET_IN';\nexport var VIEW_MERGE_IN = 'VIEW_MERGE_IN';\nexport var VIEW_DELETE_IN = 'VIEW_DELETE_IN';\nexport var VIEW_TOGGLE_IN = 'VIEW_TOGGLE_IN';\nexport var ADD_REQUESTING_IDS = 'ADD_REQUESTING_IDS';\nexport var DEL_REQUESTING_IDS = 'DEL_REQUESTING_IDS';\nvar HttpState = {\n  UNKNOWN: 'UNKNOWN',\n  REQUESTING: 'REQUESTING',\n  REQUESTED: 'REQUESTED'\n};\nvar initialState = I.fromJS({\n  chatHistory: {},\n  signupDialogOpen: false,\n  loader: {\n    show: false,\n    text: null\n  },\n  self: {},\n  loginState: {\n    state: HttpState.UNKNOWN,\n    result: {} // 'ok, 'user_type'\n\n  },\n  login: {\n    emailOrMobileOrUsername: 'test@test.com',\n    password: '123aaa',\n    code: '',\n    mobile: '',\n    mobileCountryCode: '+86',\n    method: 'password'\n  },\n  apiRoot: request.API_ROOT\n});\nexport default function () {\n  var aView = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var table = action.table;\n  var value = action.value,\n      path = action.path;\n\n  if (!isImmutable(value)) {\n    value = I.fromJS(value);\n  }\n\n  var view;\n\n  if (!isImmutable(aView)) {\n    view = I.fromJS(aView);\n  } else {\n    view = aView;\n  }\n\n  if (!_Array$isArray(action.path)) {\n    path = [path];\n  }\n\n  switch (action.type) {\n    case VIEW_SET:\n      return value;\n\n    case VIEW_SET_IN:\n      return view.setIn(path, value);\n\n    case VIEW_MERGE_IN:\n      return view.mergeIn(path, value);\n\n    case VIEW_DELETE_IN:\n      return view.deleteIn(path, value);\n\n    case VIEW_TOGGLE_IN:\n      return view.updateIn(path, function (v) {\n        return !v;\n      });\n\n    case ADD_REQUESTING_IDS:\n      return view.updateIn(['tables', table, 'requestingIds'], function (requestingIds) {\n        return requestingIds.union(value);\n      });\n\n    case DEL_REQUESTING_IDS:\n      return view.updateIn(['tables', table, 'requestingIds'], function (requestingIds) {\n        return requestingIds.subtract(value);\n      });\n\n    default:\n      return view;\n  }\n}\nexport var viewSet = function viewSet(value) {\n  return {\n    type: VIEW_SET,\n    value: value\n  };\n};\nexport var viewSetIn = function viewSetIn(path, value) {\n  return {\n    type: VIEW_SET_IN,\n    path: path,\n    value: value\n  };\n};\nexport var viewMergeIn = function viewMergeIn(path, value) {\n  return {\n    type: VIEW_MERGE_IN,\n    path: path,\n    value: value\n  };\n};\nexport var viewDeleteIn = function viewDeleteIn(path, value) {\n  return {\n    type: VIEW_DELETE_IN,\n    path: path,\n    value: value\n  };\n};\nexport var viewToggleIn = function viewToggleIn(path) {\n  return {\n    type: VIEW_TOGGLE_IN,\n    path: path\n  };\n};\nexport var setFetching = function setFetching(table, fetching) {\n  return {\n    type: VIEW_SET_IN,\n    path: ['tables', table, 'fetching'],\n    value: fetching\n  };\n};\nexport var getFetching = function getFetching(table) {\n  return function (D, S) {\n    return S().view.getIn(['tables', table, 'fetching']);\n  };\n};\nexport var addRequestingIds = function addRequestingIds(table, value) {\n  return {\n    type: ADD_REQUESTING_IDS,\n    table: table,\n    value: value\n  };\n};\nexport var delRequestingIds = function delRequestingIds(table, value) {\n  return {\n    type: DEL_REQUESTING_IDS,\n    table: table,\n    value: value\n  };\n};\nexport var setSearchText = function setSearchText(table, searchText) {\n  return function (D, S) {\n    D(viewSet(S().view.setIn(['tables', table, 'searchText'], searchText)));\n  };\n};\nexport var setAllChecked = function setAllChecked(tableName) {\n  return function (D, S) {\n    var state = S();\n    D(viewSet(state.view.updateIn(['tables', tableName], function (table) {\n      var allChecked = !table.get('allChecked');\n      return table.set('allChecked', allChecked).set('checked', allChecked ? state[tableName].map(function (item) {\n        return item.get('id');\n      }).toSet() : Set());\n    })));\n  };\n};\nexport var setFilterOfTable = function setFilterOfTable(table) {\n  var path = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ['tables', table, 'filter'];\n  return function (newFilter) {\n    return function (D, S) {\n      var oldFilter = S().view.getIn(path);\n      var filterString = _.isFunction(newFilter) ? newFilter.toString() : '';\n      var oldFilterString = _.isFunction(oldFilter) ? oldFilter.toString() : '';\n      D(viewSetIn(path, oldFilterString === filterString ? function () {\n        return true;\n      } : newFilter));\n    };\n  };\n};\nexport var selectPaymentGood = function selectPaymentGood(good) {\n  return function (D) {\n    D(viewSetIn(['payment', 'goodId'], good.get('id')));\n  };\n};\nexport var unionPendingSsconfigs = function unionPendingSsconfigs(ssconfigs) {\n  return function (D, S) {\n    var ssconfigIds = ssconfigs.map(function (s) {\n      return \"\".concat(s.get('id'), \":\").concat(s.get('server_port'));\n    });\n    var ssconfigIdsSet = S().view.get('pendingSsconfigs').union(ssconfigIds);\n    D(viewSetIn(['pendingSsconfigs'], ssconfigIdsSet));\n  };\n};\nexport var subtractPendingSsconfigs = function subtractPendingSsconfigs(ssconfigs) {\n  return function (D, S) {\n    var ssconfigIds = ssconfigs.map(function (s) {\n      return \"\".concat(s.id, \":\").concat(s.port);\n    });\n    var ssconfigIdsSet = S().view.get('pendingSsconfigs').subtract(ssconfigIds);\n    D(viewSetIn(['pendingSsconfigs'], ssconfigIdsSet));\n  };\n};\nexport var setLoggedIn = function setLoggedIn(result) {\n  return function (D) {\n    return D(viewSetIn(['loginState', 'result'], result));\n  };\n};\nexport var getLoginState = function getLoginState(view) {\n  var state = view.getIn(['loginState', 'state', 'ok']); // if (state === HttpState.REQUESTED) {\n  //   return view.getIn(['loginState', 'result', 'ok'])\n  // }\n\n  return state;\n};","map":{"version":3,"sources":["/Users/zhangxuecai/Projects/react-blog/redux/modules/view.js"],"names":["I","List","Set","isImmutable","_","request","VIEW_SET","VIEW_SET_IN","VIEW_MERGE_IN","VIEW_DELETE_IN","VIEW_TOGGLE_IN","ADD_REQUESTING_IDS","DEL_REQUESTING_IDS","HttpState","UNKNOWN","REQUESTING","REQUESTED","initialState","fromJS","chatHistory","signupDialogOpen","loader","show","text","self","loginState","state","result","login","emailOrMobileOrUsername","password","code","mobile","mobileCountryCode","method","apiRoot","API_ROOT","aView","action","table","value","path","view","type","setIn","mergeIn","deleteIn","updateIn","v","requestingIds","union","subtract","viewSet","viewSetIn","viewMergeIn","viewDeleteIn","viewToggleIn","setFetching","fetching","getFetching","D","S","getIn","addRequestingIds","delRequestingIds","setSearchText","searchText","setAllChecked","tableName","allChecked","get","set","map","item","toSet","setFilterOfTable","newFilter","oldFilter","filterString","isFunction","toString","oldFilterString","selectPaymentGood","good","unionPendingSsconfigs","ssconfigs","ssconfigIds","s","ssconfigIdsSet","subtractPendingSsconfigs","id","port","setLoggedIn","getLoginState"],"mappings":"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","sourcesContent":["import I, { List, Set, isImmutable } from 'immutable' \nimport _ from 'lodash'\nimport request from '../../utils/request'\n\nexport const VIEW_SET = 'VIEW_SET'\nexport const VIEW_SET_IN = 'VIEW_SET_IN'\nexport const VIEW_MERGE_IN = 'VIEW_MERGE_IN'\nexport const VIEW_DELETE_IN = 'VIEW_DELETE_IN'\nexport const VIEW_TOGGLE_IN = 'VIEW_TOGGLE_IN'\nexport const ADD_REQUESTING_IDS = 'ADD_REQUESTING_IDS'\nexport const DEL_REQUESTING_IDS = 'DEL_REQUESTING_IDS'\n\nconst HttpState = {\n  UNKNOWN: 'UNKNOWN',\n  REQUESTING: 'REQUESTING',\n  REQUESTED: 'REQUESTED'\n}\n\nconst initialState = I.fromJS({\n  chatHistory: {},\n  signupDialogOpen: false,\n  loader: {\n    show: false,\n    text: null\n  },\n  self: {},\n  loginState: {\n    state: HttpState.UNKNOWN,\n    result: {} // 'ok, 'user_type'\n  },\n  login: {\n    emailOrMobileOrUsername: 'test@test.com',\n    password: '123aaa',\n    code: '',\n    mobile: '',\n    mobileCountryCode: '+86',\n    method: 'password'\n  },\n  apiRoot: request.API_ROOT\n})\nexport default function(aView = initialState, action) {\n  const { table } = action\n  let { value, path } = action\n  if (!isImmutable(value)) {\n    value = I.fromJS(value)\n  }\n  let view\n  if (!isImmutable(aView)) {\n    view = I.fromJS(aView)\n  } else {\n    view = aView\n  }\n  if (!Array.isArray(action.path)) {\n    path = [path]\n  }\n  switch (action.type) {\n    case VIEW_SET:\n      return value\n    case VIEW_SET_IN:\n      return view.setIn(path, value)\n    case VIEW_MERGE_IN:\n      return view.mergeIn(path, value)\n    case VIEW_DELETE_IN:\n      return view.deleteIn(path, value)\n    case VIEW_TOGGLE_IN:\n      return view.updateIn(path, v => !v)\n    case ADD_REQUESTING_IDS:\n      return view.updateIn(['tables', table, 'requestingIds'], requestingIds => requestingIds.union(value))\n    case DEL_REQUESTING_IDS:\n      return view.updateIn(['tables', table, 'requestingIds'], requestingIds => requestingIds.subtract(value))\n\n    default:\n      return view\n  }\n}\n\nexport const viewSet = value => ({ type: VIEW_SET, value })\nexport const viewSetIn = (path, value) => ({ type: VIEW_SET_IN, path, value })\nexport const viewMergeIn = (path, value) => ({ type: VIEW_MERGE_IN, path, value })\nexport const viewDeleteIn = (path, value) => ({ type: VIEW_DELETE_IN, path, value })\n\n\nexport const viewToggleIn = path => ({ type: VIEW_TOGGLE_IN, path })\nexport const setFetching = (table, fetching) => ({\n  type: VIEW_SET_IN,\n  path: ['tables', table, 'fetching'],\n  value: fetching\n})\nexport const getFetching = table => (D, S) => S().view.getIn(['tables', table, 'fetching'])\nexport const addRequestingIds = (table, value) => ({\n  type: ADD_REQUESTING_IDS,\n  table,\n  value\n})\nexport const delRequestingIds = (table, value) => ({\n  type: DEL_REQUESTING_IDS,\n  table,\n  value\n})\n\nexport const setSearchText = (table, searchText) => (D, S) => {\n  D(viewSet(S().view.setIn(['tables', table, 'searchText'], searchText)))\n}\n\nexport const setAllChecked = tableName => (D, S) => {\n  const state = S()\n  D(\n    viewSet(\n      state.view.updateIn(['tables', tableName], table => {\n        const allChecked = !table.get('allChecked')\n        return table.set('allChecked', allChecked).set('checked', allChecked ? state[tableName].map(item => item.get('id')).toSet() : Set())\n      })\n    )\n  )\n}\n\nexport const setFilterOfTable = (table, path = ['tables', table, 'filter']) => newFilter => (D, S) => {\n  const oldFilter = S().view.getIn(path)\n  const filterString = _.isFunction(newFilter) ? newFilter.toString() : ''\n  const oldFilterString = _.isFunction(oldFilter) ? oldFilter.toString() : ''\n  D(viewSetIn(path, oldFilterString === filterString ? () => true : newFilter))\n}\n\nexport const selectPaymentGood = good => D => {\n  D(viewSetIn(['payment', 'goodId'], good.get('id')))\n}\n\nexport const unionPendingSsconfigs = ssconfigs => (D, S) => {\n  const ssconfigIds = ssconfigs.map(s => `${s.get('id')}:${s.get('server_port')}`)\n  const ssconfigIdsSet = S()\n    .view.get('pendingSsconfigs')\n    .union(ssconfigIds)\n  D(viewSetIn(['pendingSsconfigs'], ssconfigIdsSet))\n}\n\nexport const subtractPendingSsconfigs = ssconfigs => (D, S) => {\n  const ssconfigIds = ssconfigs.map(s => `${s.id}:${s.port}`)\n  const ssconfigIdsSet = S()\n    .view.get('pendingSsconfigs')\n    .subtract(ssconfigIds)\n  D(viewSetIn(['pendingSsconfigs'], ssconfigIdsSet))\n}\n\nexport const setLoggedIn = result => D => D(viewSetIn(['loginState', 'result'], result))\n\nexport const getLoginState = view => {\n  const state = view.getIn(['loginState', 'state', 'ok'])\n  // if (state === HttpState.REQUESTED) {\n  //   return view.getIn(['loginState', 'result', 'ok'])\n  // }\n  return state\n}\n"]},"metadata":{},"sourceType":"module"}