{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport fetch from 'isomorphic-unfetch';\nimport { message } from 'antd';\nimport queryString from 'query-string';\nimport localStorage from 'localStorage';\nvar dns = {\n  API_ROOT: '',\n  API_ROOT_LOCAL: 'http://localhost:8094',\n  REMOTE_HOSTS: ['http://server.dreamma.vip']\n};\nvar R = {\n  authorization: null,\n  authorizationKey: 'Token',\n  getAuthorization: function getAuthorization() {\n    R.authorization = localStorage.getItem(R.authorizationKey);\n    return R.authorization;\n  },\n  setAuthorization: function setAuthorization(s) {\n    console.info(s);\n    R.authorization = s;\n    localStorage.setItem(R.authorizationKey, s);\n    return s;\n  },\n  removeAuthorization: function removeAuthorization() {\n    localStorage.removeItem(R.authorizationKey);\n  },\n  headers: function headers() {\n    return {\n      Authorization: R.getAuthorization(),\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    };\n  },\n  testApiRoot: function () {\n    var _testApiRoot = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(rootUrl) {\n      var response, ok, status;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch(\"\".concat(rootUrl, \"/ping\"));\n\n            case 2:\n              response = _context.sent;\n              ok = response.ok, status = response.status;\n\n              if (!(ok && status === 200)) {\n                _context.next = 6;\n                break;\n              }\n\n              return _context.abrupt(\"return\", response.text().then(function (text) {\n                if (text === 'pong') {\n                  return rootUrl;\n                }\n\n                return _Promise.reject();\n              }));\n\n            case 6:\n              return _context.abrupt(\"return\", _Promise.reject(new Error(\"ok: \".concat(ok, \", status: \").concat(status))));\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function testApiRoot(_x) {\n      return _testApiRoot.apply(this, arguments);\n    }\n\n    return testApiRoot;\n  }(),\n  getApiRoot: function getApiRoot() {\n    if (localStorage.getItem('resolveByLocal') === 'true') {\n      return R.setApiRoot(dns.API_ROOT_LOCAL);\n    } //localhost 不需要ping\n\n\n    return _Promise.race(dns.REMOTE_HOSTS.map(R.testApiRoot)).then(R.setApiRoot)[\"catch\"](function (error) {\n      var msg = \"Failed to ping any remote: \".concat(error);\n      message.error(msg);\n      return _Promise.reject(new Error(msg));\n    });\n  },\n  setApiRoot: function () {\n    var _setApiRoot = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2(newApiRoot) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              dns.API_ROOT = newApiRoot;\n              localStorage.setItem('API_ROOT', newApiRoot);\n              return _context2.abrupt(\"return\", newApiRoot);\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    function setApiRoot(_x2) {\n      return _setApiRoot.apply(this, arguments);\n    }\n\n    return setApiRoot;\n  }(),\n  \"delete\": function _delete(path, data) {\n    R.getAuthorization();\n    return fetch(\"\".concat(dns.API_ROOT, \"/\").concat(path), {\n      method: 'DELETE',\n      body: _JSON$stringify(R.body(data)),\n      headers: R.headers()\n    });\n  },\n  body: function body(data) {\n    return _objectSpread({}, data);\n  },\n  parseResponse: function () {\n    var _parseResponse = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee3(res) {\n      var authorization, json;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              authorization = res.headers.get('Authorization'); //去除response header 里面的token,只有第一次sign_in 里面才有\n\n              console.info('parseResponse:', authorization);\n\n              if (authorization) {\n                console.info(authorization);\n                R.setAuthorization(authorization);\n              }\n\n              console.info('Confirm parseResponse:', R.getAuthorization()); //res.headers.forEach((v,k)=>console.log(k,v))\n              //localStorage.setItem(R.authorizationKey, authorization)\n\n              _context3.next = 6;\n              return res.json();\n\n            case 6:\n              json = _context3.sent;\n\n              if (res.status >= 400) {\n                json.status = res.status;\n              }\n\n              if (res.status === 401) {\n                R.setAuthorization('401');\n              }\n\n              return _context3.abrupt(\"return\", json);\n\n            case 10:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    function parseResponse(_x3) {\n      return _parseResponse.apply(this, arguments);\n    }\n\n    return parseResponse;\n  }(),\n  get: function () {\n    var _get = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee4(path) {\n      var data,\n          root,\n          params,\n          query,\n          res,\n          authorization,\n          content,\n          _args4 = arguments;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              data = _args4.length > 1 && _args4[1] !== undefined ? _args4[1] : {};\n              root = _args4.length > 2 && _args4[2] !== undefined ? _args4[2] : null;\n              //R.getAuthorization()\n              params = R.body(data);\n              query = queryString.stringify(params);\n              console.info(\"\".concat(root || dns.API_ROOT, \"/\").concat(path, \"?\").concat(query));\n              _context4.next = 7;\n              return fetch(\"\".concat(root || dns.API_ROOT, \"/\").concat(path, \"?\").concat(query), {\n                method: 'GET',\n                headers: R.headers()\n              });\n\n            case 7:\n              res = _context4.sent;\n              authorization = res.headers.get('Authorization');\n              console.info(authorization);\n              _context4.next = 12;\n              return R.parseResponse(res);\n\n            case 12:\n              content = _context4.sent;\n              return _context4.abrupt(\"return\", content);\n\n            case 14:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    function get(_x4) {\n      return _get.apply(this, arguments);\n    }\n\n    return get;\n  }(),\n  patch: function () {\n    var _patch = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee5(path, data) {\n      var res, content;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              R.getAuthorization();\n              _context5.next = 3;\n              return fetch(\"\".concat(dns.API_ROOT, \"/\").concat(path), {\n                method: 'PATCH',\n                headers: R.headers(),\n                body: _JSON$stringify(R.body(data))\n              });\n\n            case 3:\n              res = _context5.sent;\n              _context5.next = 6;\n              return R.parseResponse(res);\n\n            case 6:\n              content = _context5.sent;\n              return _context5.abrupt(\"return\", content);\n\n            case 8:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    function patch(_x5, _x6) {\n      return _patch.apply(this, arguments);\n    }\n\n    return patch;\n  }(),\n  post: function () {\n    var _post = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee6(path, data) {\n      var res, content;\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              R.getAuthorization();\n              _context6.next = 3;\n              return fetch(\"\".concat(dns.API_ROOT, \"/\").concat(path), {\n                method: 'POST',\n                headers: R.headers(),\n                body: _JSON$stringify(R.body(data))\n              });\n\n            case 3:\n              res = _context6.sent;\n              _context6.next = 6;\n              return R.parseResponse(res);\n\n            case 6:\n              content = _context6.sent;\n              console.info(content);\n              return _context6.abrupt(\"return\", content);\n\n            case 9:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    function post(_x7, _x8) {\n      return _post.apply(this, arguments);\n    }\n\n    return post;\n  }(),\n  put: function () {\n    var _put = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee7(path, data) {\n      var res, content;\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              R.getAuthorization();\n              _context7.next = 3;\n              return fetch(\"\".concat(dns.API_ROOT, \"/\").concat(path), {\n                method: 'PUT',\n                headers: R.headers(),\n                body: _JSON$stringify(R.body(data))\n              });\n\n            case 3:\n              res = _context7.sent;\n              _context7.next = 6;\n              return R.parseResponse(res);\n\n            case 6:\n              content = _context7.sent;\n              return _context7.abrupt(\"return\", content);\n\n            case 8:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7);\n    }));\n\n    function put(_x9, _x10) {\n      return _put.apply(this, arguments);\n    }\n\n    return put;\n  }()\n};\nexport default R;","map":{"version":3,"sources":["/Users/zhangxuecai/Projects/react-blog/utils/request.js"],"names":["fetch","message","queryString","localStorage","dns","API_ROOT","API_ROOT_LOCAL","REMOTE_HOSTS","R","authorization","authorizationKey","getAuthorization","getItem","setAuthorization","s","console","info","setItem","removeAuthorization","removeItem","headers","Authorization","Accept","testApiRoot","rootUrl","response","ok","status","text","then","reject","Error","getApiRoot","setApiRoot","race","map","error","msg","newApiRoot","path","data","method","body","parseResponse","res","get","json","root","params","query","stringify","content","patch","post","put"],"mappings":"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","sourcesContent":["import fetch from 'isomorphic-unfetch'\nimport { message } from 'antd'\nimport queryString from 'query-string'\nimport localStorage from 'localStorage'\nconst dns = {\n  API_ROOT: '',\n  API_ROOT_LOCAL: 'http://localhost:8094',\n  REMOTE_HOSTS: ['http://server.dreamma.vip'],\n}\n\nconst R = {\n  authorization: null,\n  authorizationKey: 'Token',\n\n  getAuthorization() {\n    R.authorization = localStorage.getItem(R.authorizationKey)\n    return R.authorization\n  },\n\n  setAuthorization(s) {\n    console.info(s)\n    R.authorization = s\n    localStorage.setItem(R.authorizationKey, s)\n    return s\n  },\n\n  removeAuthorization() {\n    localStorage.removeItem(R.authorizationKey)\n  },\n\n  headers() {\n    return {\n      Authorization: R.getAuthorization(),\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    }\n  },\n\n  async testApiRoot(rootUrl) {\n    const response = await fetch(`${rootUrl}/ping`)\n    const { ok, status } = response\n    if (ok && status === 200) {\n      return response.text().then(text => {\n        if (text === 'pong') {\n          return rootUrl\n        }\n        return Promise.reject()\n      })\n    }\n    return Promise.reject(new Error(`ok: ${ok}, status: ${status}`))\n  },\n\n  getApiRoot() {\n    if (localStorage.getItem('resolveByLocal') === 'true') {\n      return R.setApiRoot(dns.API_ROOT_LOCAL)\n    }//localhost 不需要ping\n    return Promise.race(dns.REMOTE_HOSTS.map(R.testApiRoot))\n      .then(R.setApiRoot)\n      .catch(error => {\n        const msg = `Failed to ping any remote: ${error}`\n        message.error(msg)\n        return Promise.reject(new Error(msg))\n      })\n  },\n\n  async setApiRoot(newApiRoot) {\n    dns.API_ROOT = newApiRoot\n    localStorage.setItem('API_ROOT', newApiRoot)\n    return newApiRoot\n  },\n\n\n  delete(path, data) {\n    R.getAuthorization()\n    return fetch(`${dns.API_ROOT}/${path}`, {\n      method: 'DELETE',\n      body: JSON.stringify(R.body(data)),\n      headers: R.headers()\n    })\n  },\n\n  body(data) {\n    return {\n      //ORIGIN: global.location.origin,\n      //DEVICE_TYPE,\n      // locale: global.LANGUAGE,\n      ...data\n    }\n  },\n\n  async parseResponse(res) {\n    const authorization = res.headers.get('Authorization')\n    //去除response header 里面的token,只有第一次sign_in 里面才有\n    console.info('parseResponse:', authorization )\n    if (authorization) {\n      console.info(authorization)\n      R.setAuthorization(authorization)\n    }\n    console.info('Confirm parseResponse:', R.getAuthorization())\n    //res.headers.forEach((v,k)=>console.log(k,v))\n    //localStorage.setItem(R.authorizationKey, authorization)\n\n    const json = await res.json()\n    if (res.status >= 400) {\n      json.status = res.status\n    }\n    if (res.status === 401) {\n      R.setAuthorization('401')\n    }\n    return json\n  },\n\n  async get(path, data = {}, root = null) {\n    //R.getAuthorization()\n    const params = R.body(data)\n    const query = queryString.stringify(params)\n    console.info(`${root || dns.API_ROOT}/${path}?${query}`)\n    const res = await fetch(`${root || dns.API_ROOT}/${path}?${query}`, {\n      method: 'GET',\n      headers: R.headers()\n    })\n    const authorization = res.headers.get('Authorization')\n    console.info(authorization )\n    const content = await R.parseResponse(res)\n    return content\n  },\n\n  async patch(path, data) {\n    R.getAuthorization()\n    const res = await fetch(`${dns.API_ROOT}/${path}`, {\n      method: 'PATCH',\n      headers: R.headers(),\n      body: JSON.stringify(R.body(data))\n    })\n    const content = await R.parseResponse(res)\n    return content\n  },\n\n  async post(path, data) {\n    R.getAuthorization()\n    const res = await fetch(`${dns.API_ROOT}/${path}`, {\n      method: 'POST',\n      headers: R.headers(),\n      body: JSON.stringify(R.body(data))\n    })\n    const content = await R.parseResponse(res)\n    console.info(content )\n    return content //返回一个Promise 给login界面\n  },\n\n  async put(path, data) {\n    R.getAuthorization()\n    const res = await fetch(`${dns.API_ROOT}/${path}`, {\n      method: 'PUT',\n      headers: R.headers(),\n      body: JSON.stringify(R.body(data))\n    })\n\n    const content = await R.parseResponse(res)\n    return content\n  }\n}\n\nexport default R\n"]},"metadata":{},"sourceType":"module"}