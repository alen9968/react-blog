{"ast":null,"code":"import request from '../utils/request';\nimport { settingsSetIn } from '../redux/modules/settings';\nimport _ from 'lodash';\nimport I from 'immutable';\n\nvar getPublicData = function getPublicData() {\n  return function (D) {\n    request.get('public').then(function (body) {\n      var ok = body.ok,\n          settings = body.settings;\n\n      if (ok) {\n        console.info(settings); //D(articlesSet(I.fromJS(_.keyBy(articles || [], 'id'))))\n\n        D(settingsSetIn(['qiniuToken'], settings.qiniuToken));\n        D(settingsSetIn(['qiniuHost'], settings.qiniuHost));\n        console.info(settings); // D(viewSetIn(['projects'], projects))\n        // D(dataMergeIn(['notification'], data))\n      }\n    });\n  };\n};\n\nexport default getPublicData;","map":{"version":3,"sources":["/Users/zhangxuecai/Projects/react-blog/http/index.js"],"names":["request","settingsSetIn","_","I","getPublicData","D","get","then","body","ok","settings","console","info","qiniuToken","qiniuHost"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,kBAApB;AACA,SAASC,aAAT,QAA8B,2BAA9B;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,CAAP,MAAc,WAAd;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB;AAAA,SAAM,UAAAC,CAAC,EAAI;AAC/BL,IAAAA,OAAO,CAACM,GAAR,CAAY,QAAZ,EAAsBC,IAAtB,CAA2B,UAAAC,IAAI,EAAI;AAAA,UACzBC,EADyB,GACRD,IADQ,CACzBC,EADyB;AAAA,UACrBC,QADqB,GACRF,IADQ,CACrBE,QADqB;;AAEjC,UAAID,EAAJ,EAAQ;AACNE,QAAAA,OAAO,CAACC,IAAR,CAAaF,QAAb,EADM,CAEN;;AACAL,QAAAA,CAAC,CAACJ,aAAa,CAAC,CAAC,YAAD,CAAD,EAAiBS,QAAQ,CAACG,UAA1B,CAAd,CAAD;AACAR,QAAAA,CAAC,CAACJ,aAAa,CAAC,CAAC,WAAD,CAAD,EAAgBS,QAAQ,CAACI,SAAzB,CAAd,CAAD;AACAH,QAAAA,OAAO,CAACC,IAAR,CAAcF,QAAd,EALM,CAMN;AACA;AACD;AACF,KAXD;AAYD,GAbqB;AAAA,CAAtB;;AAeA,eAAeN,aAAf","sourcesContent":["import request from '../utils/request'\nimport { settingsSetIn } from '../redux/modules/settings'\nimport _ from 'lodash'\nimport I from 'immutable'\n\nconst getPublicData = () => D => {\n  request.get('public').then(body => {\n    const { ok, settings } = body\n    if (ok) {\n      console.info(settings)\n      //D(articlesSet(I.fromJS(_.keyBy(articles || [], 'id'))))\n      D(settingsSetIn(['qiniuToken'], settings.qiniuToken))\n      D(settingsSetIn(['qiniuHost'], settings.qiniuHost))\n      console.info( settings)\n      // D(viewSetIn(['projects'], projects))\n      // D(dataMergeIn(['notification'], data))\n    }\n  })\n}\n\nexport default getPublicData\n"]},"metadata":{},"sourceType":"module"}