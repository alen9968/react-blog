{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport { combineReducers } from 'redux';\nimport reduceReducers from './reduceReducers';\nimport articles from './modules/articles';\nimport settings from './modules/settings';\nimport view from './modules/view';\nconst STATE_SET = 'STATE_SET';\nconst STATE_SET_IN = 'STATE_SET_IN';\nexport const stateSet = (key, value) => ({\n  type: STATE_SET,\n  key,\n  value\n});\nexport const stateSetIn = (key, path, value) => ({\n  type: STATE_SET_IN,\n  key,\n  path,\n  value\n});\nexport default (asyncReducers => reduceReducers(combineReducers(_objectSpread({\n  articles,\n  settings,\n  view\n}, asyncReducers)), (state, action) => {\n  const {\n    type,\n    key,\n    value\n  } = action;\n\n  switch (type) {\n    case STATE_SET:\n      return _objectSpread({}, state, {\n        [key]: value\n      });\n\n    case STATE_SET_IN:\n      return _objectSpread({}, state, {\n        [key]: state[key].setIn(action.path, action.value)\n      });\n\n    default:\n      return state;\n  }\n}));","map":{"version":3,"sources":["/Users/zhangxuecai/Projects/react-blog/redux/state.js"],"names":["combineReducers","reduceReducers","articles","settings","view","STATE_SET","STATE_SET_IN","stateSet","key","value","type","stateSetIn","path","asyncReducers","state","action","setIn"],"mappings":";AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,OAAOC,IAAP,MAAiB,gBAAjB;AAGA,MAAMC,SAAS,GAAG,WAAlB;AACA,MAAMC,YAAY,GAAG,cAArB;AAEA,OAAO,MAAMC,QAAQ,GAAG,CAACC,GAAD,EAAMC,KAAN,MAAiB;AAAEC,EAAAA,IAAI,EAAEL,SAAR;AAAmBG,EAAAA,GAAnB;AAAwBC,EAAAA;AAAxB,CAAjB,CAAjB;AAEP,OAAO,MAAME,UAAU,GAAG,CAACH,GAAD,EAAMI,IAAN,EAAYH,KAAZ,MAAuB;AAC/CC,EAAAA,IAAI,EAAEJ,YADyC;AAE/CE,EAAAA,GAF+C;AAG/CI,EAAAA,IAH+C;AAI/CH,EAAAA;AAJ+C,CAAvB,CAAnB;AAOP,gBAAeI,aAAa,IAC1BZ,cAAc,CACZD,eAAe;AACbE,EAAAA,QADa;AAEbC,EAAAA,QAFa;AAGbC,EAAAA;AAHa,GAIVS,aAJU,EADH,EAOZ,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjB,QAAM;AAAEL,IAAAA,IAAF;AAAQF,IAAAA,GAAR;AAAaC,IAAAA;AAAb,MAAuBM,MAA7B;;AACA,UAAQL,IAAR;AACE,SAAKL,SAAL;AACE,+BACKS,KADL;AAEE,SAACN,GAAD,GAAOC;AAFT;;AAIF,SAAKH,YAAL;AACE,+BACKQ,KADL;AAEE,SAACN,GAAD,GAAOM,KAAK,CAACN,GAAD,CAAL,CAAWQ,KAAX,CAAiBD,MAAM,CAACH,IAAxB,EAA8BG,MAAM,CAACN,KAArC;AAFT;;AAIF;AACE,aAAOK,KAAP;AAZJ;AAcD,CAvBW,CADhB","sourcesContent":["import { combineReducers } from 'redux'\nimport reduceReducers from './reduceReducers'\nimport articles from './modules/articles'\nimport settings from './modules/settings'\nimport view from './modules/view'\n\n\nconst STATE_SET = 'STATE_SET'\nconst STATE_SET_IN = 'STATE_SET_IN'\n\nexport const stateSet = (key, value) => ({ type: STATE_SET, key, value })\n\nexport const stateSetIn = (key, path, value) => ({\n  type: STATE_SET_IN,\n  key,\n  path,\n  value\n})\n\nexport default asyncReducers =>\n  reduceReducers(\n    combineReducers({\n      articles,\n      settings,\n      view,\n      ...asyncReducers\n    }),\n    (state, action) => {\n      const { type, key, value } = action\n      switch (type) {\n        case STATE_SET:\n          return {\n            ...state,\n            [key]: value\n          }\n        case STATE_SET_IN:\n          return {\n            ...state,\n            [key]: state[key].setIn(action.path, action.value)\n          }\n        default:\n          return state\n      }\n    }\n  )\n"]},"metadata":{},"sourceType":"module"}