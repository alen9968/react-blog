{"ast":null,"code":"import { Map } from 'immutable';\nimport immutableHandler from '../immutableHandler';\nexport const ARTICLES_SET = 'ARTICLES_SET';\nexport const ARTICLES_SET_IN = 'ARTICLES_SET_IN';\nexport const ARTICLE_SET = 'ARTICLE_SET';\nexport const ARTICLES_MERGE = 'ARTICLES_MERGE';\nexport default immutableHandler((articles = Map({}), action) => {\n  const {\n    id,\n    value,\n    path\n  } = action;\n\n  switch (action.type) {\n    case ARTICLES_SET:\n      return value;\n\n    case ARTICLE_SET:\n      return articles.set(id, value);\n\n    case ARTICLES_MERGE:\n      return articles.mergeDeep(value);\n\n    case ARTICLES_SET_IN:\n      return articles.setIn(path, value);\n\n    default:\n      return articles;\n  }\n});\nexport const articlesSet = value => ({\n  type: ARTICLES_SET,\n  value\n});\nexport const articleSet = (id, value) => ({\n  type: ARTICLE_SET,\n  id,\n  value\n});\nexport const articlesSetIn = (path, value) => ({\n  type: ARTICLES_SET_IN,\n  path,\n  value\n});\nexport const articlesMerge = value => ({\n  type: ARTICLES_MERGE,\n  value\n});","map":{"version":3,"sources":["/Users/zhangxuecai/Projects/react-blog/redux/modules/articles.js"],"names":["Map","immutableHandler","ARTICLES_SET","ARTICLES_SET_IN","ARTICLE_SET","ARTICLES_MERGE","articles","action","id","value","path","type","set","mergeDeep","setIn","articlesSet","articleSet","articlesSetIn","articlesMerge"],"mappings":"AAAA,SAASA,GAAT,QAAoB,WAApB;AACA,OAAOC,gBAAP,MAA6B,qBAA7B;AAEA,OAAO,MAAMC,YAAY,GAAG,cAArB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,WAAW,GAAG,aAApB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AAEP,eAAeJ,gBAAgB,CAAC,CAACK,QAAQ,GAAGN,GAAG,CAAC,EAAD,CAAf,EAAqBO,MAArB,KAAgC;AAC9D,QAAM;AAAEC,IAAAA,EAAF;AAAMC,IAAAA,KAAN;AAAaC,IAAAA;AAAb,MAAsBH,MAA5B;;AACA,UAAQA,MAAM,CAACI,IAAf;AACE,SAAKT,YAAL;AACE,aAAOO,KAAP;;AACF,SAAKL,WAAL;AACE,aAAOE,QAAQ,CAACM,GAAT,CAAaJ,EAAb,EAAiBC,KAAjB,CAAP;;AACF,SAAKJ,cAAL;AACE,aAAOC,QAAQ,CAACO,SAAT,CAAmBJ,KAAnB,CAAP;;AACF,SAAKN,eAAL;AACE,aAAOG,QAAQ,CAACQ,KAAT,CAAeJ,IAAf,EAAqBD,KAArB,CAAP;;AACF;AACE,aAAOH,QAAP;AAVJ;AAYD,CAd8B,CAA/B;AAgBA,OAAO,MAAMS,WAAW,GAAGN,KAAK,KAAK;AAAEE,EAAAA,IAAI,EAAET,YAAR;AAAsBO,EAAAA;AAAtB,CAAL,CAAzB;AACP,OAAO,MAAMO,UAAU,GAAG,CAACR,EAAD,EAAKC,KAAL,MAAgB;AAAEE,EAAAA,IAAI,EAAEP,WAAR;AAAqBI,EAAAA,EAArB;AAAyBC,EAAAA;AAAzB,CAAhB,CAAnB;AACP,OAAO,MAAMQ,aAAa,GAAG,CAACP,IAAD,EAAOD,KAAP,MAAkB;AAC7CE,EAAAA,IAAI,EAAER,eADuC;AAE7CO,EAAAA,IAF6C;AAG7CD,EAAAA;AAH6C,CAAlB,CAAtB;AAKP,OAAO,MAAMS,aAAa,GAAGT,KAAK,KAAK;AAAEE,EAAAA,IAAI,EAAEN,cAAR;AAAwBI,EAAAA;AAAxB,CAAL,CAA3B","sourcesContent":["import { Map } from 'immutable'\nimport immutableHandler from '../immutableHandler'\n\nexport const ARTICLES_SET = 'ARTICLES_SET'\nexport const ARTICLES_SET_IN = 'ARTICLES_SET_IN'\nexport const ARTICLE_SET = 'ARTICLE_SET'\nexport const ARTICLES_MERGE = 'ARTICLES_MERGE'\n\nexport default immutableHandler((articles = Map({}), action) => {\n  const { id, value, path } = action\n  switch (action.type) {\n    case ARTICLES_SET:\n      return value\n    case ARTICLE_SET:\n      return articles.set(id, value)\n    case ARTICLES_MERGE:\n      return articles.mergeDeep(value)\n    case ARTICLES_SET_IN:\n      return articles.setIn(path, value)\n    default:\n      return articles\n  }\n})\n\nexport const articlesSet = value => ({ type: ARTICLES_SET, value })\nexport const articleSet = (id, value) => ({ type: ARTICLE_SET, id, value })\nexport const articlesSetIn = (path, value) => ({\n  type: ARTICLES_SET_IN,\n  path,\n  value\n})\nexport const articlesMerge = value => ({ type: ARTICLES_MERGE, value })\n"]},"metadata":{},"sourceType":"module"}