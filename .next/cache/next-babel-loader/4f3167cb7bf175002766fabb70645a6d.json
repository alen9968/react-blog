{"ast":null,"code":"import _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _ from 'lodash';\nimport React from 'react';\nimport I, { Map } from 'immutable';\nimport { message as Message } from 'antd';\nimport Router from 'next/router';\nimport request from '../utils/request'; //import { selfMerge, selfSet } from '../redux/modules/self'\n\nimport { viewSetIn, setFetching, getFetching, setLoggedIn, viewSet } from '../redux/modules/view';\nimport loginState from './sessions';\nexport const uploadPhotos = () => (D, S) => {\n  const data = _JSON$stringify(S().view.get('imgList').toList().toJS());\n\n  const id = S().self.get('id');\n  request.post('/photos', {\n    data,\n    id\n  }).then(body => {\n    if (body.ok) {\n      D(viewSetIn(['imgList'], {})); // eslint-disable-line no-use-before-define\n\n      Message.success('保存成功');\n    }\n  });\n};\nexport const signup = () => (D, S) => {\n  const {\n    view\n  } = S();\n  return request.post('/users', {\n    data: view.get('signup')\n  }).then(body => {\n    const {\n      ok,\n      message\n    } = body;\n\n    if (ok === false) {\n      Message.info(message);\n    } else {\n      D(loginState());\n    }\n\n    D(viewSetIn(['signupLoading'], false));\n  });\n};\nexport const setToken = s => D => request.setToken(s).then(() => {\n  D(loginState());\n});\nexport const logout = () => D => _Promise.all([request.delete('users/sign_out'), request.setAuthorization('')]).then(() => {\n  D(setLoggedIn({\n    ok: false\n  }));\n  D(selfSet(Map()));\n  Message.success('已登出');\n  Router.push('/');\n});\nexport const processSignupQuery = query => (D, S) => {\n  const {\n    c,\n    email\n  } = query;\n  const {\n    view\n  } = S();\n  D(viewSet(view.update('signup', s1 => s1.withMutations(s2 => {\n    s2.setIn(['settings', 'area'], 'EC');\n\n    if (!_.isEmpty(c)) {\n      s2.set('referrer_short_id', c);\n    }\n\n    if (!_.isEmpty(email)) {\n      const {\n        form\n      } = this.props;\n      s2.set('email_or_mobile', email);\n      form.setFieldsValue({\n        email,\n        mobile: email\n      });\n    }\n  }))));\n};\nexport const getUser = shortId => D => request.get('users/name', {\n  short_id: shortId\n}).then(r => {\n  const {\n    data\n  } = r;\n  D(viewSetIn(['signup', 'settings', 'referrer_name'], data));\n});\nexport const createAccessToken = deviceType => D => request.post('developers/create_access_token', {\n  for_device_type: deviceType\n}).then(body => {\n  if (body.ok) {\n    D(viewSetIn(['tokens'], body.tokens));\n  }\n});\nexport const tokensIndex = () => D => request.get('developers/access_tokens').then(body => {\n  if (body.ok) {\n    D(viewSetIn(['tokens'], body.tokens));\n  }\n});\nexport const deleteToken = accessToken => D => request.post('developers/remove_access_token', {\n  access_token: accessToken\n}).then(body => {\n  if (body.ok) {\n    D(viewSetIn(['tokens'], body.tokens));\n  }\n});\nexport const isUserExist = (value, callback) => () => request.post('users/exists_by_any', {\n  value\n}).then(r => {\n  const {\n    exists,\n    message\n  } = r;\n\n  if (exists) {\n    callback(message);\n  }\n});\nexport const getProjectActives = id => D => {\n  // todo push 404\n  return request.get('projects/payments_list', {\n    id\n  }).then(body => {\n    const {\n      ok,\n      payments\n    } = body;\n\n    if (ok) {\n      D(viewSetIn(['project', 'actives'], payments));\n    }\n  });\n};\nexport const updateSelf = () => (D, S) => {\n  const {\n    self\n  } = S();\n  request.put(`users/profiles/${self.get('id')}`, self.toJS()).then(body => {\n    if (body.ok) {\n      D(fundingNotification()); // eslint-disable-line no-use-before-define\n\n      Message.success('保存成功');\n    }\n  });\n};\nexport const changePassword = () => (D, S) => {\n  const {\n    self\n  } = S();\n  const fields = ['password', 'oldPassword', 'passwordConfirmation'];\n  request.put(`users/passwords`, {\n    data: S().self.filter((v, k) => fields.indexOf(k) !== -1)\n  }).then(body => {\n    const {\n      ok,\n      message\n    } = body;\n\n    if (ok) {\n      D(selfSet(self.deleteAll(fields)));\n      D(fundingNotification());\n      Message.success(message);\n      Router.push('/my/account');\n    }\n\n    return ok;\n  }).catch(e => {\n    throw e;\n  });\n};","map":{"version":3,"sources":["/Users/zhangxuecai/Projects/react-blog/http/self.js"],"names":["_","React","I","Map","message","Message","Router","request","viewSetIn","setFetching","getFetching","setLoggedIn","viewSet","loginState","uploadPhotos","D","S","data","view","get","toList","toJS","id","self","post","then","body","ok","success","signup","info","setToken","s","logout","all","delete","setAuthorization","selfSet","push","processSignupQuery","query","c","email","update","s1","withMutations","s2","setIn","isEmpty","set","form","props","setFieldsValue","mobile","getUser","shortId","short_id","r","createAccessToken","deviceType","for_device_type","tokens","tokensIndex","deleteToken","accessToken","access_token","isUserExist","value","callback","exists","getProjectActives","payments","updateSelf","put","fundingNotification","changePassword","fields","filter","v","k","indexOf","deleteAll","catch","e"],"mappings":"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","sourcesContent":["import _ from 'lodash'\nimport React from 'react'\nimport I, { Map } from 'immutable'\nimport { message as Message } from 'antd'\nimport Router from 'next/router'\nimport request from '../utils/request'\n//import { selfMerge, selfSet } from '../redux/modules/self'\nimport { viewSetIn, setFetching, getFetching, setLoggedIn, viewSet } from '../redux/modules/view'\nimport loginState from './sessions'\n\n\nexport const uploadPhotos = () => (D, S) => {\n  const data = JSON.stringify(S().view.get('imgList').toList().toJS())\n  const id = S().self.get('id')\n\n  request.post('/photos', { data,id })\n    .then(body => {\n      if (body.ok) {\n        D(viewSetIn(['imgList'], {})) // eslint-disable-line no-use-before-define\n        Message.success('保存成功')\n      }\n    })\n}\n\nexport const signup = () => (D, S) => {\n  const { view } = S()\n  return request\n    .post('/users', {\n      data: view.get('signup')\n    })\n    .then(body => {\n      const { ok, message } = body\n      if (ok === false) {\n        Message.info(message)\n      } else {\n        D(loginState())\n      }\n      D(viewSetIn(['signupLoading'], false))\n    })\n}\n\n\nexport const setToken = s => D =>\n  request.setToken(s).then(() => {\n    D(loginState())\n  })\n\nexport const logout = () => D =>\n  Promise.all([request.delete('users/sign_out'), request.setAuthorization('')]).then(() => {\n    D(setLoggedIn({ ok: false }))\n    D(selfSet(Map()))\n    Message.success('已登出')\n    Router.push('/')\n  })\n\nexport const processSignupQuery = query => (D, S) => {\n  const { c, email } = query\n  const { view } = S()\n  D(\n    viewSet(\n      view.update('signup', s1 =>\n        s1.withMutations(s2 => {\n          s2.setIn(['settings', 'area'], 'EC')\n          if (!_.isEmpty(c)) {\n            s2.set('referrer_short_id', c)\n          }\n          if (!_.isEmpty(email)) {\n            const { form } = this.props\n            s2.set('email_or_mobile', email)\n            form.setFieldsValue({\n              email,\n              mobile: email\n            })\n          }\n        })\n      )\n    )\n  )\n}\n\nexport const getUser = shortId => D =>\n  request.get('users/name', { short_id: shortId }).then(r => {\n    const { data } = r\n    D(viewSetIn(['signup', 'settings', 'referrer_name'], data))\n  })\n\nexport const createAccessToken = deviceType => D =>\n  request.post('developers/create_access_token', { for_device_type: deviceType }).then(body => {\n    if (body.ok) {\n      D(viewSetIn(['tokens'], body.tokens))\n    }\n  })\n\nexport const tokensIndex = () => D =>\n  request.get('developers/access_tokens').then(body => {\n    if (body.ok) {\n      D(viewSetIn(['tokens'], body.tokens))\n    }\n  })\n\nexport const deleteToken = accessToken => D =>\n  request.post('developers/remove_access_token', { access_token: accessToken }).then(body => {\n    if (body.ok) {\n      D(viewSetIn(['tokens'], body.tokens))\n    }\n  })\n\nexport const isUserExist = (value, callback) => () =>\n  request\n    .post('users/exists_by_any', {\n      value\n    })\n    .then(r => {\n      const { exists, message } = r\n      if (exists) {\n        callback(message)\n      }\n    })\n\nexport const getProjectActives = id => D => {\n  // todo push 404\n  return request.get('projects/payments_list', { id }).then(body => {\n    const { ok, payments } = body\n    if (ok) {\n      D(viewSetIn(['project', 'actives'], payments))\n    }\n  })\n}\n\n\n\nexport const updateSelf = () => (D, S) => {\n  const { self } = S()\n  request.put(`users/profiles/${self.get('id')}`, self.toJS()).then(body => {\n    if (body.ok) {\n      D(fundingNotification()) // eslint-disable-line no-use-before-define\n      Message.success('保存成功')\n    }\n  })\n}\n\nexport const changePassword = () => (D, S) => {\n  const { self } = S()\n  const fields = ['password', 'oldPassword', 'passwordConfirmation']\n  request\n    .put(`users/passwords`, {\n      data: S().self.filter((v, k) => fields.indexOf(k) !== -1)\n    })\n    .then(body => {\n      const { ok, message } = body\n      if (ok) {\n        D(selfSet(self.deleteAll(fields)))\n        D(fundingNotification())\n        Message.success(message)\n        Router.push('/my/account')\n      }\n      return ok\n    })\n    .catch(e => {\n      throw e\n    })\n}\n\n"]},"metadata":{},"sourceType":"module"}