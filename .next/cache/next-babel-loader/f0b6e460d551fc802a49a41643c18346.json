{"ast":null,"code":"import I from 'immutable';\nimport request from '../../utils/request';\nimport immutableHandler from '../immutableHandler';\nexport var SETTINGS_SET_IN = 'SETTINGS_SET_IN';\nexport var SETTINGS_SET = 'SETTINGS_SET';\nexport var SETTINGS_MERGE = 'SETTINGS_MERGE';\nvar initialState = I.fromJS({\n  qiniuToken: '',\n  qiniuHost: ''\n});\nexport default immutableHandler(function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var path = action.path,\n      value = action.value;\n\n  switch (action.type) {\n    case SETTINGS_SET:\n      return value;\n\n    case SETTINGS_MERGE:\n      return state.merge(value);\n\n    case SETTINGS_SET_IN:\n      return state.setIn(path, value);\n\n    default:\n      return state;\n  }\n});\nexport var settingsMerge = function settingsMerge(value) {\n  return {\n    type: SETTINGS_MERGE,\n    value: value\n  };\n};\nexport var settingsSet = function settingsSet(value) {\n  return {\n    type: SETTINGS_SET,\n    value: value\n  };\n};\nexport var settingsSetIn = function settingsSetIn(path, value) {\n  return {\n    type: SETTINGS_SET_IN,\n    path: path,\n    value: value\n  };\n};","map":{"version":3,"sources":["/Users/zhangxuecai/Projects/react-blog/redux/modules/settings.js"],"names":["I","request","immutableHandler","SETTINGS_SET_IN","SETTINGS_SET","SETTINGS_MERGE","initialState","fromJS","qiniuToken","qiniuHost","state","action","path","value","type","merge","setIn","settingsMerge","settingsSet","settingsSetIn"],"mappings":"AAAA,OAAOA,CAAP,MAAc,WAAd;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,gBAAP,MAA6B,qBAA7B;AAEA,OAAO,IAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,IAAMC,YAAY,GAAG,cAArB;AACP,OAAO,IAAMC,cAAc,GAAG,gBAAvB;AAEP,IAAMC,YAAY,GAAGN,CAAC,CAACO,MAAF,CAAS;AAC5BC,EAAAA,UAAU,EAAE,EADgB;AAE5BC,EAAAA,SAAS,EAAE;AAFiB,CAAT,CAArB;AAKA,eAAeP,gBAAgB,CAAC,YAAkC;AAAA,MAAjCQ,KAAiC,uEAAzBJ,YAAyB;AAAA,MAAXK,MAAW;AAAA,MACxDC,IADwD,GACxCD,MADwC,CACxDC,IADwD;AAAA,MAClDC,KADkD,GACxCF,MADwC,CAClDE,KADkD;;AAEhE,UAAQF,MAAM,CAACG,IAAf;AACE,SAAKV,YAAL;AACE,aAAOS,KAAP;;AACF,SAAKR,cAAL;AACE,aAAOK,KAAK,CAACK,KAAN,CAAYF,KAAZ,CAAP;;AACF,SAAKV,eAAL;AACE,aAAOO,KAAK,CAACM,KAAN,CAAYJ,IAAZ,EAAkBC,KAAlB,CAAP;;AACF;AACE,aAAOH,KAAP;AARJ;AAUD,CAZ8B,CAA/B;AAcA,OAAO,IAAMO,aAAa,GAAG,SAAhBA,aAAgB,CAAAJ,KAAK;AAAA,SAAK;AAAEC,IAAAA,IAAI,EAAET,cAAR;AAAwBQ,IAAAA,KAAK,EAALA;AAAxB,GAAL;AAAA,CAA3B;AACP,OAAO,IAAMK,WAAW,GAAG,SAAdA,WAAc,CAAAL,KAAK;AAAA,SAAK;AAAEC,IAAAA,IAAI,EAAEV,YAAR;AAAsBS,IAAAA,KAAK,EAALA;AAAtB,GAAL;AAAA,CAAzB;AACP,OAAO,IAAMM,aAAa,GAAG,SAAhBA,aAAgB,CAACP,IAAD,EAAOC,KAAP;AAAA,SAAkB;AAC7CC,IAAAA,IAAI,EAAEX,eADuC;AAE7CS,IAAAA,IAAI,EAAJA,IAF6C;AAG7CC,IAAAA,KAAK,EAALA;AAH6C,GAAlB;AAAA,CAAtB","sourcesContent":["import I from 'immutable'\nimport request from '../../utils/request'\nimport immutableHandler from '../immutableHandler'\n\nexport const SETTINGS_SET_IN = 'SETTINGS_SET_IN'\nexport const SETTINGS_SET = 'SETTINGS_SET'\nexport const SETTINGS_MERGE = 'SETTINGS_MERGE'\n\nconst initialState = I.fromJS({\n  qiniuToken: '',\n  qiniuHost: '',\n})\n\nexport default immutableHandler((state = initialState, action) => {\n  const { path, value } = action\n  switch (action.type) {\n    case SETTINGS_SET:\n      return value\n    case SETTINGS_MERGE:\n      return state.merge(value)\n    case SETTINGS_SET_IN:\n      return state.setIn(path, value)\n    default:\n      return state\n  }\n})\n\nexport const settingsMerge = value => ({ type: SETTINGS_MERGE, value })\nexport const settingsSet = value => ({ type: SETTINGS_SET, value })\nexport const settingsSetIn = (path, value) => ({\n  type: SETTINGS_SET_IN,\n  path,\n  value\n})\n\n\n"]},"metadata":{},"sourceType":"module"}